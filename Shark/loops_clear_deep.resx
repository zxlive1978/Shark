<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hJgAAAADAAAAB1tZV+5YVlXPAAAAEwAAAAD///8A////AP///wAAAAAMZ2Zk/0tKSC8AAAABAAAAAAAA
        AAQAP4OuCFig/xyH1v8cidr/G4jY/xqH1/8ah9j/GofY/xqH2f8ah9j/GofY/xuI2P8cidr/HIfW/whY
        oP8AP4OuAAAABAAAAAAAAAABS0pIL2dmZP8AAAAMAAAAAP///wD///8A////AAAAAANwbmydAAAAAwAA
        AAAAAAAAAAAAAAAAAAEAPn1LAEWK+AJaqP8AbsX/AHbU/wdvvv8Bc8v/EWap/wdvv/8Aetf/AXHH/wNb
        qP8ARYr4AD59SwAAAAEAAAAAAAAAAAAAAAAAAAADcG5snQAAAAMAAAAA////AP///wD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABADVxTFZQTf9rXFL/XlFJ/1ZJQf9OQjv/Rzs0/0Iz
        K/8vKir/ADdzTAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZlxV/6iinf+gm5f/jYqH/315
        dv9tamf/WlZS/zYuKP8AAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFHQ0EoRkRDwVJQ
        T/9PTk7/SUdH/z89Pv8wLzHBKygoKAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/////8P4H8PD4AfDw4ABw8MAAMPCAABDwAAAA8AAAAPAAAAD4AAAB/AA
        AA/4AAAf+AAAH/gAAB/AAAADwAAAA8AAAAPAAAAD4AAAB/gAAB/4AAAf4AAAB8AAAAPAAAADwAAAA8AA
        AAPCAABDxwAA4//AA///4Af//+AH//////8=
</value>
  </data>
</root>