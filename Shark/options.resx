<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        ABAAAAAWAAAAFgAAABYAAAAWAAAAFgAAABAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQAAAAMQAAAEIAAABDAAAAQwAAAEMAAABCAAAAMQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAJAAAAEQAA
        AA0AAAAEAAAAAAAAABZta2nzamhm/2dlY/93dHL/Z2Vj/2poZv9ta2nzAAAAFgAAAAAAAAAEAAAADQAA
        ABEAAAAJAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEQAA
        ACcAAAA4AAAALgAAABQAAAADAAAAFmtpZ//m5uP/4N/d/97d3f/g393/5ubj/2tpZ/8AAAAWAAAAAwAA
        ABQAAAAuAAAAOAAAACcAAAARAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        ABQAAAAwSklIinBsav9jYV/GAAAANAAAAB0AAAAna2hm/+Df3v/e3Nv/3NrZ/97c2//g397/a2dl/wAA
        ACcAAAAdAAAANGNhX8ZwbGr/SklIigAAADAAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAARAAAAMGBeXcOSkI7/ycjG/4KAfv9fXlzBAAAARwAAAEhpZ2X/397c/9rY1//Y1tX/2tjX/97e
        2/9xb23/AAAASAAAAEdeXVvBgoB+/8nIxv+SkI7/YF5dwwAAADAAAAARAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACQAAACdiYF7CmJaU/+Lh3//e3Nv/2trY/4+Ni/9raWb/amhm/5yamP/d29r/19XU/9bU
        0//X1dT/3dva/5yamP9pZ2X/cnBu/5eVkv/a2df/3tzb/+Lh3/+YlpT/YmBewgAAACcAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAARVFJQf5SSkP/i4eD/2NXU/9XU0//Y1dT/3t7d/+Lh3//h4d7/3dva/9fV
        1P/U0tH/1NLR/9TS0f/X1dT/3dva/+Hg3v/h4d7/3t3c/9jV1P/V1NP/2NXU/+Lh4P+UkpD/VFJQfwAA
        ABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA11c3H/zMvJ/9rZ1//S0dD/0tDP/9LQz//T0dD/09HQ/9PR
        0P/S0M//0tDP/9LQz//S0M//0tDP/9LQz//S0M//09HQ/9PR0P/T0dD/0tDP/9LQz//T0dD/3NrZ/8zL
        yf91c3H/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHRycLSHhYP/5OLh/9TS0f/Qzs3/0M7N/9DO
        zf/Qzs3/0M7N/9DOzf/Qzs3/0M7N/9DOzf/Qzs3/0M7N/9DOzf/Qzs3/0M7N/9DOzf/Qzs3/0M7N/9TS
        0f/c2tn/h4WD/3Nxb7UAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA29ta66dmpj/4ODf/87M
        y//OzMv/zszL/87My//OzMv/zszL/87My//OzMv/09LQ/87My//OzMv/zszL/87My//OzMv/zszL/87M
        y//OzMv/4N7d/5yal/9ta2muAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAEAAAABYAAAAWAAAAJ3Jw
        bv/l5eL/zMrJ/8zKyf/Mysn/zMrJ/8zKyf/S0M//3t3b/+bl4//W1dP/5uXj/97d2//S0M//zMrJ/8zK
        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
        AAfAAAAH4AAAD/AAAB/4IAg//+AP///gD/8=
</value>
  </data>
</root>